name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  filter-changes:
    runs-on: ubuntu-latest
    outputs:
      serving: ${{ steps.filter.outputs.serving }}
      trainer_api: ${{ steps.filter.outputs.trainer_api }}
      ml_pipeline: ${{ steps.filter.outputs.ml_pipeline }}
      mlflow: ${{ steps.filter.outputs.mlflow }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check changed paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            serving:
              - 'services/model-server/**'
            trainer_api:
              - 'services/training/**'
            ml_pipeline:
              - 'ml_pipeline/**'
            mlflow:
              - 'services/mlflow/**'
              - 'k8s/deployment_mlflow.yaml'
              - 'k8s/service_mlflow.yaml'

  deploy-serving:
    needs: filter-changes
    if: needs.filter-changes.outputs.serving == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build Docker image for serving
        run: |
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/serving/serving-api:latest ./services/model-server

      - name: Push Docker image for serving
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/serving/serving-api:latest

      - name: Get GKE credentials for serving cluster
        run: |
          gcloud container clusters get-credentials ${{ secrets.SERVING_CLUSTER }} \
            --zone ${{ secrets.GCP_ZONE }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy serving to GKE
        run: |
          kubectl apply -f k8s/deployment_serving_api.yaml
          kubectl apply -f k8s/service_serving_api.yaml

      - name: Rollout restart serving deployment
        run: |
          kubectl rollout restart deployment/serving-api
          kubectl rollout status deployment/serving-api --timeout=120s

  deploy-trainer-api:
    needs: filter-changes
    if: needs.filter-changes.outputs.trainer_api == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build Docker image for trainer API
        run: |
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/trainer-api/trainer-api:latest ./training_service

      - name: Push Docker image for trainer API
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/trainer-api/trainer-api:latest

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.TRAINING_CLUSTER }} \
            --zone ${{ secrets.GCP_ZONE }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Confirm access to training cluster
        run: |
          echo "Verifying access to cluster"
          kubectl get nodes || (echo "‚ùå Cannot access cluster!" && exit 1)

      - name: Deploy trainer API to GKE
        run: |
          kubectl apply -f k8s/deployment_trainer_api.yaml
          kubectl apply -f k8s/service_trainer_api.yaml

      - name: Rollout restart trainer API deployment
        run: |
          kubectl rollout restart deployment/trainer-api
          kubectl rollout status deployment/trainer-api

  deploy-training-pipeline:
    needs: filter-changes
    if: needs.filter-changes.outputs.ml_pipeline == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build Docker image for training pipeline
        run: |
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/trainer/training:latest ./ml_pipeline

      - name: Push Docker image for training pipeline
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/trainer/training:latest

  deploy-mlflow:
    needs: filter-changes
    if: needs.filter-changes.outputs.mlflow == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build Docker image for MLflow
        run: |
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mlflowserver/mlflow-custom:latest ./services/mlflow

      - name: Push Docker image for MLflow
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mlflowserver/mlflow-custom:latest

      - name: Get GKE credentials for training cluster
        run: |
          gcloud container clusters get-credentials ${{ secrets.TRAINING_CLUSTER }} \
            --zone ${{ secrets.GCP_ZONE }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy MLflow to GKE
        run: |
          kubectl apply -f k8s/deployment_mlflow.yaml
          kubectl apply -f k8s/service_mlflow.yaml

      - name: Wait for MLflow rollout
        run: |
          kubectl rollout status deployment/mlflow --timeout=120s
