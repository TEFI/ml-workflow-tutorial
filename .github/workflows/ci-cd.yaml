name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  GCP_PROJECT_ID: sodium-pager-461309-p3
  GCP_REGION: us-central1
  GCP_ZONE: us-central1-a
  SERVING_CLUSTER: ml-serving-cluster
  TRAINING_CLUSTER: ml-training-cluster

jobs:
  filter-changes:
    runs-on: ubuntu-latest
    outputs:
      serving: ${{ steps.filter.outputs.serving }}
      trainer_api: ${{ steps.filter.outputs.trainer_api }}
      ml_pipeline: ${{ steps.filter.outputs.ml_pipeline }}
      mlflow: ${{ steps.filter.outputs.mlflow }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check changed paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            serving:
              - 'services/model-server/**'
            trainer_api:
              - 'services/training/**'
            ml_pipeline:
              - 'ml_pipeline/**'
            mlflow:
              - 'services/mlflow/**'
              - 'k8s/deployment_mlflow.yaml'
              - 'k8s/service_mlflow.yaml'

  deploy-serving:
    needs: filter-changes
    if: needs.filter-changes.outputs.serving == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - uses: google-github-actions/setup-gcloud@v2

      - run: gcloud components install gke-gcloud-auth-plugin
      - run: gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      - run: |
          IMAGE="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/serving/inference-api:latest"
          docker build -t $IMAGE ./services/model-server
          docker push $IMAGE

      - run: |
          gcloud container clusters get-credentials $SERVING_CLUSTER \
            --zone $GCP_ZONE \
            --project $GCP_PROJECT_ID

      - run: |
          kubectl apply -f k8s/deployment_serving_api.yaml
          kubectl apply -f k8s/service_serving_api.yaml
          kubectl rollout restart deployment/serving-api
          kubectl rollout status deployment/serving-api --timeout=120s

  deploy-trainer-api:
    needs: filter-changes
    if: needs.filter-changes.outputs.trainer_api == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - uses: google-github-actions/setup-gcloud@v2

      - run: gcloud components install gke-gcloud-auth-plugin
      - run: gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      - run: |
          IMAGE="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/trainer/training-api:latest"
          docker build -t $IMAGE ./training_service
          docker push $IMAGE

      - run: |
          gcloud container clusters get-credentials $TRAINING_CLUSTER \
            --zone $GCP_ZONE \
            --project $GCP_PROJECT_ID

      - run: |
          echo "Verifying access to cluster"
          kubectl get nodes || (echo "‚ùå Cannot access cluster!" && exit 1)

      - run: |
          kubectl apply -f k8s/deployment_trainer_api.yaml
          kubectl apply -f k8s/service_trainer_api.yaml
          kubectl rollout restart deployment/trainer-api
          kubectl rollout status deployment/trainer-api

  deploy-training-pipeline:
    needs: filter-changes
    if: needs.filter-changes.outputs.ml_pipeline == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - uses: google-github-actions/setup-gcloud@v2

      - run: gcloud components install gke-gcloud-auth-plugin
      - run: gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      - run: |
          IMAGE="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/training/training-job:latest"
          docker build -t $IMAGE ./ml_pipeline
          docker push $IMAGE

  deploy-mlflow:
    needs: filter-changes
    if: needs.filter-changes.outputs.mlflow == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - uses: google-github-actions/setup-gcloud@v2

      - run: gcloud components install gke-gcloud-auth-plugin
      - run: gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      - run: |
          IMAGE="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/mlflow/mlflow-server:latest"
          docker build -t $IMAGE ./services/mlflow
          docker push $IMAGE

      - run: |
          gcloud container clusters get-credentials $TRAINING_CLUSTER \
            --zone $GCP_ZONE \
            --project $GCP_PROJECT_ID

      - run: |
          kubectl apply -f k8s/deployment_mlflow.yaml
          kubectl apply -f k8s/service_mlflow.yaml
          kubectl rollout status deployment/mlflow --timeout=120s
